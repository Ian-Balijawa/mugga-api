import nodemailer from 'nodemailer';
import { ContactFormData } from '../types/common.types';
import env from '../config/env.config';

export class MailService {
  private transporter: nodemailer.Transporter;

  constructor() {
    this.transporter = nodemailer.createTransport( {
      host: env.SMTP_HOST,
      port: env.SMTP_PORT,
      secure: env.SMTP_PORT === 465,
      auth: {
        user: env.SMTP_USER,
        pass: env.SMTP_PASS
      }
    } );
  }

  async sendContactFormEmail( data: ContactFormData ): Promise<void> {
    const htmlContent = `
    <!DOCTYPE html>
    <html>
    <head>
      <style>
        @import url('https://rsms.me/inter/inter.css');

        body {
          font-family: 'Inter var', system-ui, -apple-system, sans-serif;
          margin: 0;
          padding: 0;
          background-color: #F0FFF4;
          color: #1C4532;
        }
        .container {
          width: 100%;
          max-width: 600px;
          margin: 20px auto;
          background: #FFFFFF;
          border-radius: 8px;
          box-shadow: 0 4px 8px rgba(47, 133, 90, 0.1);
          overflow: hidden;
          border: 1px solid #C6F6D5;
        }
        .header {
          background-color: #2F855A;
          color: #FFFFFF;
          padding: 20px;
          text-align: center;
          font-size: 24px;
          font-weight: 600;
        }
        .content {
          padding: 20px;
          animation: fadeIn 0.5s ease-in;
        }
        .content p {
          margin: 10px 0;
          font-size: 16px;
          line-height: 1.6;
        }
        .content strong {
          color: #276749;
        }
        .footer {
          background-color: #F0FFF4;
          color: #22543D;
          padding: 15px;
          text-align: center;
          font-size: 12px;
          border-top: 1px solid #C6F6D5;
        }
        .footer a {
          color: #2F855A;
          text-decoration: none;
        }
        @keyframes fadeIn {
          0% { opacity: 0; }
          100% { opacity: 1; }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          New Contact Form Submission
        </div>
        <div class="content">
          <p><strong>Name:</strong> ${data.name}</p>
          <p><strong>Email:</strong> ${data.email}</p>
          <p><strong>Subject:</strong> ${data.subject}</p>
          <p><strong>Message:</strong></p>
          <p>${data.message}</p>
        </div>
        <div class="footer">
          This email was generated by the contact form on your website.
          <br>If you have any questions, please <a href="mailto:${env.SMTP_USER}">contact us</a>.
        </div>
      </div>
    </body>
    </html>
  `;
    await this.transporter.sendMail( {
      from: env.SMTP_USER,
      to: env.MAIL_TO,
      subject: `Contact Form: ${data.subject}`,
      html: htmlContent,
    } );
  }

  async sendRegistrationConfirmation( name: string, email: string, program: string ): Promise<void> {
    const htmlContent = `
            <h1>Registration Confirmation</h1>
            <p>Hi ${name}, thank you for registering with us for ${program}!</p>
            <p>We will get back to you soon.</p>
            <p>Thank you!</p>
        `;

    await this.transporter.sendMail( {
      from: env.SMTP_USER,
      to: email,
      subject: `Registration Confirmation: ${program}`,
      html: htmlContent,
    } );
  }

  async sendNewsLetterSubscriptionEmail( email: string ): Promise<void> {
    const htmlContent = `
            <h1>Thank you for subscribing to our newsletter!</h1>
            <p>We will send you updates about our programs and events.</p>
            <p>Thank you!</p>
        `;

    await this.transporter.sendMail( {
      from: env.SMTP_USER,
      to: email,
      subject: 'Newsletter Subscription',
      html: htmlContent,
    } );
  }

  async sendNewsLetterUnsubscriptionEmail( email: string ): Promise<void> {
    const htmlContent = `
            <h1>Thank you for unsubscribing from our newsletter!</h1>
            <p>We will no longer send you updates about our programs and events.</p>
            <p>Thank you!</p>
        `;

    await this.transporter.sendMail( {
      from: env.SMTP_USER,
      to: email,
      subject: 'Newsletter Unsubscription',
      html: htmlContent,
    } );
  }
}
